---
interface Props {
  size?: 'small' | 'medium' | 'large';
  text?: string;
  inline?: boolean;
}

const { size = 'medium', text = 'Loading...', inline = false } = Astro.props;
---

<div class={`loading-spinner ${size} ${inline ? 'inline' : ''}`} role="status" aria-live="polite">
  <div class="spinner" aria-hidden="true"></div>
  <span class="sr-only">{text}</span>
</div>

<style>
  .loading-spinner {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 1rem;
  }

  .loading-spinner.inline {
    flex-direction: row;
    gap: 0.5rem;
  }

  .spinner {
    border: 3px solid rgba(var(--gray-light), 0.3);
    border-top: 3px solid var(--accent);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  .loading-spinner.small .spinner {
    width: 20px;
    height: 20px;
    border-width: 2px;
  }

  .loading-spinner.medium .spinner {
    width: 40px;
    height: 40px;
    border-width: 3px;
  }

  .loading-spinner.large .spinner {
    width: 60px;
    height: 60px;
    border-width: 4px;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Respect reduced motion preference */
  @media (prefers-reduced-motion: reduce) {
    .spinner {
      animation: none;
      border-top-color: var(--accent);
      border-right-color: var(--accent);
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .spinner {
      border-color: #000;
      border-top-color: var(--accent);
    }
  }

  /* Screen reader only text */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>